crypto = require('crypto');
moment = require('moment');

baseUrl = 'https://rest.telesign.com/v1/phoneid/live/'

#
# Request Function -------------------------------------------------------
#

# Z questions:  date and duration?

request = (vars) ->
  d = Date.now()
  rfc822Date = moment(d).format('ddd, DD MMM YYYY HH:mm:ss ZZ')
  CanonicalizedTsHeaders = 'x-ts-date:' + rfc822Date + '\n'
  CanonicalizedPOSTVariables = ''
  CanonicalizedResource = "/v1/phoneid/live/1#{vars.lead.phone1}"
  apiKeyDecoded = new Buffer("#{vars.telesign.encoded_apikey}", 'base64')
  stringToSign = String("GET\n\n\n" + CanonicalizedTsHeaders + CanonicalizedResource);
  hash = crypto.createHmac('sha1', apiKeyDecoded).update(stringToSign, 'utf-8').digest('base64')
  signature = "TSA " + "#{vars.telesign.customer_id}" + ":" + hash
  url: "#{baseUrl}1#{vars.lead.phone1}?ucid=LEAD&signature=#{signature}",
  method: 'GET',
  headers:
    Accepts: 'application/json'

request.variables = ->
  [
    { name: 'telesign.customer_id', type: 'string', required: true, description: 'Telesign Customer Id' },
    { name: 'telesign.encoded_apikey', type: 'string', required: true, description: 'Telesign base64-encoded API Key' },
    { name: 'lead.phone1', type: 'string', required: true, description: 'Phone Number' }
  ]



#
# Response Function ------------------------------------------------------
#

response = (vars, req, res) ->
  if res.status == 200
    event = JSON.parse(res.body)
    event.outcome = 'success'
  else
    event = { outcome: 'error', reason: "Telesign error (#{res.status})" }

  telesign:
    phone: event

response.variables = ->
  [
    { name: 'reference_id', type: 'string', description: 'A 32-digit hex value used to identify the web service request. The value is unique to each web service request, is randomly-generated by TeleSign, and is returned in the response message immediately following the web service request.' },
    { name: 'resource_uri', type: 'string', description: 'The URI for the phoneid resource.' },
    { name: 'sub_resource', type: 'string', description: 'The subresource to access; it is set to live.' },
    { name: 'status.updated_on', type: 'string', description: 'An ISO 8601 UTC timestamp indicating when the transaction status was updated.' },
    { name: 'status.code', type: 'number', description: 'One of the Transaction Status Codes.' },
    { name: 'status.description', type: 'string', description: 'Text describing the transaction status.' },
    { name: 'errors', type: 'string', description: 'A JSON object that contains information about error conditions that might have resulted from the request, in an array of property-value pairs. If multiple errors occur, a pair of parameters is returned for each error. If no errors occur, then this object is empty.' },
    { name: 'phone_type.code', type: 'number', description: 'Code parameter of the object containing details about the phone type.'},
    { name: 'phone_type.description', type: 'string', description: 'Description parameter of the object containing details about the phone type.'},
    { name: 'live.subscriber_status', type: 'string', description: 'A string indicating the current status of the subscriberâ€™s phone number.'},
    { name: 'live.device_status', type: 'string', description: 'A string indicating the current status of the phone equipment.'},
    { name: 'live.roaming', type: 'string', description: 'A string indicating whether the mobile device is currently roaming outside of the contracted service coverage area.'},
    { name: 'live.roaming_country', type: 'string', description: 'The country in which the mobile device is roaming.'},
    { name: 'live.roaming_country_iso2', type: 'string', description: 'The ISO 3166-1 2-letter Country Code in which the mobile device is roaming.'},
    { name: 'location.city', type: 'string', description: 'A string specifying the name of the city associated with the phone number.'},
    { name: 'location.state', type: 'string', description: 'The 2-letter State Code of the state (province, district, or territory) associated with the phone number (North America only).'},
    { name: 'location.zip', type: 'string', description: 'The 5-digit United States Postal Service ZIP Code associated with the phone number (U.S. only).'},
    { name: 'location.metro_code', type: 'string', description: 'A 4-digit string indicating the Primary Metropolitan Statistical Area (PMSA) Code for the location associated with the phone number (U.S. only). PMSA Codes are governed by the US Census Bureau.'},
    { name: 'location.county', type: 'string', description: 'A string specifying the name of the County (or Parish) associated with the phone number (U.S. only).'},
    { name: 'location.country.name', type: 'string', description: 'The Country Name associated with phone number.'},
    { name: 'location.country.iso2', type: 'string', description: 'The ISO 3166-1 2-letter Country Code associated with the phone number.'},
    { name: 'location.country.iso3', type: 'string', description: 'The ISO 3166-1 3-letter Country Code associated with the phone number.'},
    { name: 'location.coordinates.latitude', type: 'string', description: 'A value indicating the number of degrees of latitude of the location associated with the phone number, expressed in seven decimal digits, with five decimal places.'},
    { name: 'location.coordinates.longitude', type: 'string', description: 'A value indicating the number of degrees of longitude of the location associated with the phone number, expressed in eight decimal digits, with five decimal places.'},
    { name: 'location.timezone.name', type: 'string', description: 'A string identifying the Time Zone Name (TZ) associated with the phone number (U.S. only).'},
    { name: 'location.timezone.utc_offset_min', type: 'string', description: 'For U.S. domestic phone numbers, this parameter returns the UTC offset associated with the phone number.  For international phone numbers, this parameter returns the minimum UTC offset for the country associated with the phone number.'},
    { name: 'location.timezone.utc_offset_max', type: 'string', description: 'For international phone numbers, this parameter returns the maximum UTC offset for the country associated with the phone number. For U.S. domestic phone numbers, this parameter returns the same result as utc_offset_min.'},
    { name: 'numbering.original.complete_phone_number', type: 'string', description: 'The Base Phone Number prefixed with the Country Dialing Code. This forms the Subresource Identifier part of the PhoneID Live web service URI.'},
    { name: 'numbering.original.country_code', type: 'number', description: 'A 1, 2, or 3-digit number representing the Country Dialing Code.'},
    { name: 'numbering.original.phone_number', type: 'number', description: 'The Base Phone Number. This is simply the phone number without the Country Dialing Code.'},
    { name: 'numbering.cleansing.call.country_code', type: 'number', description: 'A 1, 2, or 3-digit number representing the Country Dialing Code.'},
    { name: 'numbering.cleansing.call.phone_number', type: 'string', description: 'The Base Phone Number. This is simply the phone number without the Country Dialing Code.'},
    { name: 'numbering.cleansing.call.cleansed_code', type: 'number', description: 'One of the Phone Number Cleansing Codes describing the cleansing operation TeleSign performed on the phone number. The default value is 100 (No changes were made to the phone number).'},
    { name: 'numbering.cleansing.call.min_length', type: 'number', description: 'The minimum number of digits allowed for phone numbers with this particular Country Dialing Code.'},
    { name: 'numbering.cleansing.call.max_length', type: 'number', description: 'The maximum number of digits allowed for phone numbers with this particular Country Dialing Code.'},
    { name: 'carrier.name', type: 'string', description: 'A string specifying the name of the carrier.'}
    { name: 'duration', type: 'number', description: 'the time it took to process your request' }
  ]


#
# Exports ----------------------------------------------------------------
#

module.exports =
  request: request,
  response: response